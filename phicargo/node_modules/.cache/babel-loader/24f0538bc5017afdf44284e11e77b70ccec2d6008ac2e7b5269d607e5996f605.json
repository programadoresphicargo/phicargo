{"ast":null,"code":"import { getPickersLocalization } from \"./utils/getPickersLocalization.js\";\nconst views = {\n  // maps TimeView to its translation\n  hours: 'гадзіны',\n  minutes: 'хвіліны',\n  seconds: 'секунды',\n  meridiem: 'мерыдыем'\n};\nconst beBYPickers = {\n  // Calendar navigation\n  previousMonth: 'Папярэдні месяц',\n  nextMonth: 'Наступны месяц',\n  // View navigation\n  openPreviousView: 'Aдкрыць папярэдні выгляд',\n  openNextView: 'Aдкрыць наступны выгляд',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'гадавы выгляд адкрыты, перайсці да каляндарнага выгляду' : 'каляндарны выгляд адкрыты, перайсці да гадавога выгляду',\n  // DateRange labels\n  start: 'Пачатак',\n  end: 'Канец',\n  // startDate: 'Start date',\n  // startTime: 'Start time',\n  // endDate: 'End date',\n  // endTime: 'End time',\n\n  // Action bar\n  cancelButtonLabel: 'Адмена',\n  clearButtonLabel: 'Ачысціць',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Сёння',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Абраць дату',\n  dateTimePickerToolbarTitle: 'Абраць дату і час',\n  timePickerToolbarTitle: 'Абраць час',\n  dateRangePickerToolbarTitle: 'Абраць каляндарны перыяд',\n  // Clock labels\n  clockLabelText: (view, time, utils, formattedTime) => `Абярыце ${views[view]}. ${!formattedTime && (time === null || !utils.isValid(time)) ? 'Час не абраны' : `Абраны час ${formattedTime ?? utils.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} гадзін`,\n  minutesClockNumberText: minutes => `${minutes} хвілін`,\n  secondsClockNumberText: seconds => `${seconds} секунд`,\n  // Digital clock labels\n  selectViewText: view => `Абярыце ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Нумар тыдня',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Тыдзень ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils, formattedDate) => formattedDate || value !== null && utils.isValid(value) ? `Абраць дату, абрана дата  ${formattedDate ?? utils.format(value, 'fullDate')}` : 'Абраць дату',\n  openTimePickerDialogue: (value, utils, formattedTime) => formattedTime || value !== null && utils.isValid(value) ? `Абраць час, абрыны час  ${formattedTime ?? utils.format(value, 'fullTime')}` : 'Абраць час',\n  // fieldClearLabel: 'Clear',\n\n  // Table labels\n  timeTableLabel: 'абраць час',\n  dateTableLabel: 'абраць дату',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n\n  // View names\n  // year: 'Year',\n  // month: 'Month',\n  // day: 'Day',\n  // weekDay: 'Week day',\n  // hours: 'Hours',\n  // minutes: 'Minutes',\n  // seconds: 'Seconds',\n  // meridiem: 'Meridiem',\n\n  // Common\n  // empty: 'Empty',\n};\nexport const beBY = getPickersLocalization(beBYPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","meridiem","beBYPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","utils","formattedTime","isValid","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","formattedDate","openTimePickerDialogue","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","beBY"],"sources":["D:/react/phicargo/node_modules/@mui/x-date-pickers/locales/beBY.js"],"sourcesContent":["import { getPickersLocalization } from \"./utils/getPickersLocalization.js\";\nconst views = {\n  // maps TimeView to its translation\n  hours: 'гадзіны',\n  minutes: 'хвіліны',\n  seconds: 'секунды',\n  meridiem: 'мерыдыем'\n};\nconst beBYPickers = {\n  // Calendar navigation\n  previousMonth: 'Папярэдні месяц',\n  nextMonth: 'Наступны месяц',\n  // View navigation\n  openPreviousView: 'Aдкрыць папярэдні выгляд',\n  openNextView: 'Aдкрыць наступны выгляд',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'гадавы выгляд адкрыты, перайсці да каляндарнага выгляду' : 'каляндарны выгляд адкрыты, перайсці да гадавога выгляду',\n  // DateRange labels\n  start: 'Пачатак',\n  end: 'Канец',\n  // startDate: 'Start date',\n  // startTime: 'Start time',\n  // endDate: 'End date',\n  // endTime: 'End time',\n\n  // Action bar\n  cancelButtonLabel: 'Адмена',\n  clearButtonLabel: 'Ачысціць',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Сёння',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Абраць дату',\n  dateTimePickerToolbarTitle: 'Абраць дату і час',\n  timePickerToolbarTitle: 'Абраць час',\n  dateRangePickerToolbarTitle: 'Абраць каляндарны перыяд',\n  // Clock labels\n  clockLabelText: (view, time, utils, formattedTime) => `Абярыце ${views[view]}. ${!formattedTime && (time === null || !utils.isValid(time)) ? 'Час не абраны' : `Абраны час ${formattedTime ?? utils.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} гадзін`,\n  minutesClockNumberText: minutes => `${minutes} хвілін`,\n  secondsClockNumberText: seconds => `${seconds} секунд`,\n  // Digital clock labels\n  selectViewText: view => `Абярыце ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Нумар тыдня',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Тыдзень ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils, formattedDate) => formattedDate || value !== null && utils.isValid(value) ? `Абраць дату, абрана дата  ${formattedDate ?? utils.format(value, 'fullDate')}` : 'Абраць дату',\n  openTimePickerDialogue: (value, utils, formattedTime) => formattedTime || value !== null && utils.isValid(value) ? `Абраць час, абрыны час  ${formattedTime ?? utils.format(value, 'fullTime')}` : 'Абраць час',\n  // fieldClearLabel: 'Clear',\n\n  // Table labels\n  timeTableLabel: 'абраць час',\n  dateTableLabel: 'абраць дату',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n\n  // View names\n  // year: 'Year',\n  // month: 'Month',\n  // day: 'Day',\n  // weekDay: 'Week day',\n  // hours: 'Hours',\n  // minutes: 'Minutes',\n  // seconds: 'Seconds',\n  // meridiem: 'Meridiem',\n\n  // Common\n  // empty: 'Empty',\n};\nexport const beBY = getPickersLocalization(beBYPickers);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}